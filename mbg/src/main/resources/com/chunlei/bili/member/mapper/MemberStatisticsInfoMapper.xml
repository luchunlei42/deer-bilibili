<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chunlei.bili.member.mapper.MemberStatisticsInfoMapper">
  <resultMap id="BaseResultMap" type="com.chunlei.bili.member.model.MemberStatisticsInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <result column="login_count" jdbcType="INTEGER" property="loginCount" />
    <result column="attend_count" jdbcType="INTEGER" property="attendCount" />
    <result column="fans_count" jdbcType="INTEGER" property="fansCount" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, member_id, comment_count, login_count, attend_count, fans_count, like_count
  </sql>
  <select id="selectByExample" parameterType="com.chunlei.bili.member.model.MemberStatisticsInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member_statistics_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member_statistics_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from member_statistics_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.chunlei.bili.member.model.MemberStatisticsInfoExample">
    delete from member_statistics_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chunlei.bili.member.model.MemberStatisticsInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into member_statistics_info (member_id, comment_count, login_count, 
      attend_count, fans_count, like_count
      )
    values (#{memberId,jdbcType=BIGINT}, #{commentCount,jdbcType=INTEGER}, #{loginCount,jdbcType=INTEGER}, 
      #{attendCount,jdbcType=INTEGER}, #{fansCount,jdbcType=INTEGER}, #{likeCount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chunlei.bili.member.model.MemberStatisticsInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into member_statistics_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        member_id,
      </if>
      <if test="commentCount != null">
        comment_count,
      </if>
      <if test="loginCount != null">
        login_count,
      </if>
      <if test="attendCount != null">
        attend_count,
      </if>
      <if test="fansCount != null">
        fans_count,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="loginCount != null">
        #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="attendCount != null">
        #{attendCount,jdbcType=INTEGER},
      </if>
      <if test="fansCount != null">
        #{fansCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chunlei.bili.member.model.MemberStatisticsInfoExample" resultType="java.lang.Long">
    select count(*) from member_statistics_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update member_statistics_info
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.memberId != null">
        member_id = #{row.memberId,jdbcType=BIGINT},
      </if>
      <if test="row.commentCount != null">
        comment_count = #{row.commentCount,jdbcType=INTEGER},
      </if>
      <if test="row.loginCount != null">
        login_count = #{row.loginCount,jdbcType=INTEGER},
      </if>
      <if test="row.attendCount != null">
        attend_count = #{row.attendCount,jdbcType=INTEGER},
      </if>
      <if test="row.fansCount != null">
        fans_count = #{row.fansCount,jdbcType=INTEGER},
      </if>
      <if test="row.likeCount != null">
        like_count = #{row.likeCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update member_statistics_info
    set id = #{row.id,jdbcType=BIGINT},
      member_id = #{row.memberId,jdbcType=BIGINT},
      comment_count = #{row.commentCount,jdbcType=INTEGER},
      login_count = #{row.loginCount,jdbcType=INTEGER},
      attend_count = #{row.attendCount,jdbcType=INTEGER},
      fans_count = #{row.fansCount,jdbcType=INTEGER},
      like_count = #{row.likeCount,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chunlei.bili.member.model.MemberStatisticsInfo">
    update member_statistics_info
    <set>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="commentCount != null">
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="loginCount != null">
        login_count = #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="attendCount != null">
        attend_count = #{attendCount,jdbcType=INTEGER},
      </if>
      <if test="fansCount != null">
        fans_count = #{fansCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chunlei.bili.member.model.MemberStatisticsInfo">
    update member_statistics_info
    set member_id = #{memberId,jdbcType=BIGINT},
      comment_count = #{commentCount,jdbcType=INTEGER},
      login_count = #{loginCount,jdbcType=INTEGER},
      attend_count = #{attendCount,jdbcType=INTEGER},
      fans_count = #{fansCount,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>